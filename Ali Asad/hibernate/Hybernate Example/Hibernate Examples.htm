<!DOCTYPE html>
<!-- saved from url=(0062)http://www.tutorialspoint.com/hibernate/hibernate_examples.htm -->
<html lang="en" style="margin-top: 35px; position: relative !important;" conduit_compatibility_version="1"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script src="./Hibernate Examples_files/cb=gapi.loaded_0" async=""></script><script type="text/javascript" src="./Hibernate Examples_files/auth013.js"></script><script type="text/javascript" src="./Hibernate Examples_files/plusone.js" gapi_processed="true"></script><link rel="stylesheet" type="text/css" href="./Hibernate Examples_files/widget114.css" media="all">
<meta charset="utf-8">
<title>Hibernate Examples</title>
<link rel="shortcut icon" href="http://www.tutorialspoint.com/favicon.ico" type="image/x-icon">
<meta name="description" content="Hibernate, Tutorials, Learning, Beginners, Basics, Environment, Object Relational Mapping (ORM), Query Language, Native SQL, Caching, Interceptors, Persistent Classes, Persistent Objects, Collections, Associations and components, and Hibernate tools.">
<meta name="keywords" content="Hibernate Examples - Learn Hibernate 3.x starting from environment setup, Object Relational Mapping (ORM), Query Language, Native SQL, Caching, Interceptors, Persistent Classes, Persistent Objects, Collections, Associations and components, and Hibernate tools.">
<!--<base href="http://www.tutorialspoint.com">--><base href=".">
<link rel="stylesheet" type="text/css" href="./Hibernate Examples_files/style.css">
<link rel="stylesheet" type="text/css" href="./Hibernate Examples_files/prettify.css">
<script type="text/javascript" src="./Hibernate Examples_files/prettify.js"></script>
<style media="screen" type="text/css">
#topmenu a:hover {text-decoration:none;color:#bcae79  !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#bcae79  !important;
}
#topmenu
{
background-color:#59666c !important;
}
#leftcol ul.menu li.heading 
{
background:#bcae79 !important;
border:1px solid #59666c  !important;
}
#leftcol, #middlecol, #rightcol {min-height:1200px; padding:0px;}
</style>
<script src="./Hibernate Examples_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
<div style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000;" id="_atssh"><iframe id="_atssh130" title="AddThis utility frame" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border: 0px; left: 0px; top: 0px;" src="./Hibernate Examples_files/sh114.htm"></iframe></div><script type="text/javascript" src="./Hibernate Examples_files/core077.js"></script><style>@media print { #main-iframe-wrapper .TOOLBAR_IFRAME { width: 0 !important; } html { margin-top: 0 !important; } }</style><script>try{if(_TPIHelper){var data = {type: "toolbarAPIUsed" }; window.top.postMessage(JSON.stringify(data), "*");}}catch(e){}</script><div id="__conduitCustomDivForTPI" style="display:none">{"data":{"original":"CT3298566","active":""},"msgSender":"context.getCTID","fromTPIView":true}</div><div id="__conduitCustomDivForTPICT3298566" style="display:none">{"data":"{\"topic\":\"getInstalledApps\",\"data\":{\"installedApps\":[\"dc6953e8-e966-4f5b-ae7f-f59c442bc0fc\",\"93951332-f9a7-4af7-af02-17ec3d749ce3\",\"71422c68-106e-4efa-a402-2c5d0c3ab92f\",\"1af6a81c-86ff-4937-bd94-7bdb646af2dc\",\"789d74ff-86a2-4fb9-9903-16e7b2641f1b\",\"2d2f2f16-9432-4890-9f93-624a84cf6261\",\"71228e4e-f215-4193-8343-c67dbdfa4e66\",\"1ec55dac-8dca-406b-9697-5d68893c1c0c\"]}}","msgSender":"getInstalledApps","fromTPIView":true}</div><script src="chrome-extension://fdkednngfjmpnljkolbapdednncafhen/js/toolbarAPI/toolbarAPI.js?uniqueLocalId=418734"></script><script>if (typeof(window.sendToApp) === 'undefined') {window.sendToApp = function(data, ctid) { var message = {__type: 'InjectCommunicator', tabId: '12', data: data || null, toolbarCtid: ctid};var scr = document.createElement('div'); scr.id = 'InjectCommunicator';  scr.style = 'display:none'; scr.setAttribute('data-communicator',(window.conduitCopyOfJSON || JSON).stringify(message)); document.head.appendChild(scr);};}</script><script>function EBCallBackMessageReceived(data, args) { conduitPage.sendRequest(data.ctid, data.appId, data.topic, args);} if (!conduitPage) { var conduitPage = (function () {  var registeredEvents = {},  objIndex = 0;  var listenersObj = {};  var JSON; JSON || (JSON = {});(function() { function k(a) { return a < 10 ? "0" + a : a } function o(a) { p.lastIndex = 0; return p.test(a) ? '"' + a.replace(p, function(a) { var c = r[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + a + '"' } function l(a, j) { var c, d, h, m, g = e, f, b = j[a]; b && typeof b === "object" && typeof b.toJSON === "function" && (b = b.toJSON(a)); typeof i === "function" && (b = i.call(j, a, b)); switch (typeof b) {  case "string": return o(b); case "number": return isFinite(b) ? String(b) : "null"; case "boolean": case "null": return String(b); case "object": if (!b) return "null";  e += n; f = []; if (Object.prototype.toString.apply(b) === "[object Array]") { m = b.length; for (c = 0; c < m; c += 1) f[c] = l(c, b) || "null"; h = f.length === 0 ? "[]" : e ? "[\n" + e + f.join(",\n" + e) + "\n" + g + "]" : "[" + f.join(",") + "]"; e = g; return h } if (i && typeof i === "object") { m = i.length; for (c = 0; c < m; c += 1) typeof i[c] === "string" && (d = i[c], (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h)) } else for (d in b) Object.prototype.hasOwnProperty.call(b, d) && (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h); h = f.length === 0 ? "{}" : e ? "{\n" + e + f.join(",\n" + e) + "\n" + g + "}" : "{" + f.join(",") +"}"; e = g; return h } } if (typeof Date.prototype.toJSON !== "function") Date.prototype.toJSON = function() { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + k(this.getUTCMonth() + 1) + "-" + k(this.getUTCDate()) + "T" + k(this.getUTCHours()) + ":" + k(this.getUTCMinutes()) + ":" + k(this.getUTCSeconds()) + "Z" : null }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() { return this.valueOf() }; var q = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,p = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, e, n, r = { "\u0008": "\\b", "\t": "\\t", "\n": "\\n", "\u000c": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, i; if (typeof JSON.stringify !== "function") JSON.stringify = function(a, j, c) { var d; n = e = ""; if (typeof c === "number") for (d = 0; d < c; d += 1) n += " "; else typeof c === "string" && (n = c); if ((i = j) && typeof j !== "function" && (typeof j !== "object" || typeof j.length !== "number")) throw Error("JSON.stringify"); return l("",{ "": a })}; if (typeof JSON.parse !== "function") JSON.parse = function(a, e) { function c(a, d) { var g, f, b = a[d]; if (b && typeof b === "object") for (g in b) Object.prototype.hasOwnProperty.call(b, g) && (f = c(b, g), f !== void 0 ? b[g] = f : delete b[g]); return e.call(a, d, b) } var d, a = String(a); q.lastIndex = 0; q.test(a) && (a = a.replace(q, function(a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) })); if (/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return d = eval("(" + a + ")"), typeof e === "function" ? c({ "": d }, "") : d; throw new SyntaxError("JSON.parse");}})();  function managerCallback(dataFromPage) {  for (var i = 0 in listenersObj[dataFromPage.topic]) {   listenersObj[dataFromPage.topic][i](dataFromPage.data);   delete listenersObj[dataFromPage.topic][i];  }  }  function addCallback(topic, callback) {  if (!listenersObj[topic]) {   listenersObj[topic] = [];  }  listenersObj[topic].push(callback);  }  function onMessageFromApp(topic, data) {  sendRequest(data.ctid, null, topic, data.userData, function () { }, true, data.cbId);  }  this.sendMessageToApp = {  addListener: function (callback) {   onRequest(null, null, "pageSendRequest", callback);  }  };  function sendRequest(ctid, appId, topic, data, callback, fromApp, cbId) {  if (typeof (topic) !== "string" ) {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (typeof (data) !== "string") {   return { errorMessage: "Invalid data, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  if (!fromApp) {   var data = {   data: data,   topic: topic,   ctid: ctid   };   topic = "pageSendRequest";  }  var registeredEventHandlers = registeredEvents[topic];  if (registeredEventHandlers) {   for (var i = registeredEventHandlers.length - 1; i >= 0; i--) {   try {    if (callback && !fromApp) {    addCallback(data.topic, callback);    }    registeredEventHandlers[i].handler.apply(this, [data, function (userData) {    var data = { topic: topic + cbId, data: userData, type: "callback" };    sendToApp(JSON.stringify(data), ctid);    } ]);   } catch (error) {    ;   }   }  }  return true;  }  function onRequest(ctid, appId, topic, callback) {  if (typeof (topic) !== "string") {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  var subscribeData = {},   registeredEvent;  registeredEvent = registeredEvents[topic];  subscribeData.handler = callback;  if (!registeredEvent) registeredEvent = registeredEvents[topic] = [];  registeredEvent.push(subscribeData);  return true;  }  sendMessageToApp.addListener(function (data) {  sendToApp(JSON.stringify(data), data.ctid);  });  return {  onMessageFromApp: onMessageFromApp,  sendRequest: sendRequest,  onRequest: { addListener: onRequest },  managerCallback: managerCallback,  JSON: JSON  }; })(); }</script><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script>(function(){function selectionProcessor() {

        function trimString(str) {
            if (typeof (str) != "string")
                return "";

            return str.replace(/^\s+|\s+$/g, "");
        }

        function cutToMaxLatter(data) {
            if (typeof (data) != "string")
                return "";

            if (data.length > 200) { //same behavior as old toolbar
                data = data.substr(0, 200);
                var index = data.lastIndexOf(" ");
                if (index > 1)
                    data = data.substr(0, index);
            }

            return data;
        }

        function bindSelection() {

            if (document.body && document.body.addEventListener) {
                document.body.addEventListener("mouseup", handletext, false);
            }
            else if (document.body && document.body.attachEvent) {
                document.body.attachEvent("onmouseup", handletext);
            }
        }

        function handletext() {
            var dataObj = {}; //can represent TextRange or SelectionObject objects depending browser

            if (window.getSelection && document.activeElement) {
                if (document.activeElement.nodeName == "INPUT" && document.activeElement.getAttribute("type").toLowerCase() == "text") {
                    var ta = document.activeElement;
                    dataObj = ta.value.substring(ta.selectionStart, ta.selectionEnd);
                } else {
                    dataObj = window.getSelection();
                }
            } else if (document.getSelection) {
                dataObj = document.getSelection();
            } else if (document.selection) {
                dataObj = document.selection.createRange().text;

            } else
                return;

            if (!dataObj) //is dataObj is null or undefined or string empty etc.
                return;

            var txt = dataObj.toString();

            txt = trimString(txt) || '';
            txt = cutToMaxLatter(txt) || '';

            if (txt) {  //if not an empty string
                conduitPage.sendRequest('CT3298566', '130110228003246321','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ 'name': "selection", 'text': txt }), function () { });
            }
        }

        conduitPage.sendRequest('CT3298566', '130110228003246321','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ name: 'handshake' }), function () { });

        return {
            "bindSelection": bindSelection
        }
    } selectionProcessor().bindSelection(); })();</script><div id="InjectCommunicator" data-communicator="{&quot;__type&quot;:&quot;InjectCommunicator&quot;,&quot;tabId&quot;:&quot;12&quot;,&quot;data&quot;:&quot;{\&quot;data\&quot;:\&quot;{\\\&quot;name\\\&quot;:\\\&quot;handshake\\\&quot;}\&quot;,\&quot;topic\&quot;:\&quot;CT3298566_130110228003246321_tabs_search/plugin[onpage_selection]:onPageMessage\&quot;,\&quot;ctid\&quot;:\&quot;CT3298566\&quot;}&quot;,&quot;toolbarCtid&quot;:&quot;CT3298566&quot;}"></div><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script>if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3298566', appId : '2005125478662977424', topic : 'callBackToAppThroughAppToTabCommunication_0.9364137779921293'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script></head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="http://www.tutorialspoint.com/index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com">
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == &#39;Search this site...&#39;) {this.value = &#39;&#39;;}" onblur="if (this.value == &#39;&#39;) {this.value = &#39;Search this site...&#39;;}">
<input value="FORID:11" name="cof" type="hidden">
<input type="hidden" name="ie" value="ISO-8859-1">
<input class="submit btn" type="image" src="./Hibernate Examples_files/icon-search.png" alt="Go">
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="http://www.tutorialspoint.com/index.htm" target="_top">HOME </a>
<a href="http://www.tutorialspoint.com/java/index.htm" target="_top">JAVA </a>
<a href="http://www.tutorialspoint.com/php/index.htm" target="_top">PHP </a>
<a href="http://www.tutorialspoint.com/python/index.htm" target="_top">Python </a>
<a href="http://www.tutorialspoint.com/ruby/index.htm" target="_top">Ruby </a>
<a href="http://www.tutorialspoint.com/perl/index.htm" target="_top">Perl </a>
<a href="http://www.tutorialspoint.com/html/index.htm" target="_top">HTML </a>
<a href="http://www.tutorialspoint.com/css/index.htm" target="_top">CSS </a>
<a href="http://www.tutorialspoint.com/javascript/index.htm" target="_top">Javascript </a>
<a href="http://www.tutorialspoint.com/mysql/index.htm" target="_top">MySQL </a>
<a href="http://www.tutorialspoint.com/cplusplus/index.htm" target="_top">C++ </a>
<a href="http://www.tutorialspoint.com/unix/index.htm" target="_top">UNIX </a>
<a href="http://www.tutorialspoint.com/more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="http://www.tutorialspoint.com/references.htm" target="_top">REFERENCES</a> |
<a href="http://www.tutorialspoint.com/forums/index.php" target="_top">FORUM</a> |
<a href="http://www.tutorialspoint.com/about/index.htm" target="_top">ABOUT</a> |
<a href="http://www.tutorialspoint.com/about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="./Hibernate Examples_files/hibernate-mini-logo.png" alt="Hibernate Tutorial">
</div>
<ul class="menu">
<li class="heading">Hibernate Tutorial</li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/index.htm">Hibernate Home</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/orm_overview.htm">ORM Overview</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_overview.htm">Hibernate Overview</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_architecture.htm">Hibernate Architecture</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_environment.htm">Hibernate Environment</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_configuration.htm">Hibernate Configuration</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_sessions.htm">Hibernate Sessions</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_persistent_classes.htm">Hibernate Persistent Class</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_mapping_files.htm">Hibernate Mapping Files</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm">Hibernate Mapping Types</a></li>
<li><a target="_top" href="./Hibernate Examples_files/Hibernate Examples.htm"><b>Hibernate Examples</b></a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_or_mappings.htm">Hibernate O/R Mappings</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_annotations.htm">Hibernate Annotations</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_query_language.htm">Hibernate Query Language</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_criteria_queries.htm">Hibernate Criteria Queries</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_native_sql.htm">Hibernate Native SQL</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_caching.htm">Hibernate Caching</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_batch_processing.htm">Hibernate Batch Processing</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_interceptors.htm">Hibernate Interceptors</a></li>
</ul>
<ul class="menu">
<li class="heading">Hibernate Useful Resources</li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_quick_guide.htm">Hibernate Quick Guide</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/hibernate/hibernate_useful_resources.htm">Hibernate Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="http://www.tutorialspoint.com/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Hibernate Examples</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript" src="./Hibernate Examples_files/show_ads.js"> 
</script><ins style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px"><ins id="aswift_0_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px"><iframe width="468" height="60" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
</div>
<hr>
<div class="pre-btn">
<a href="http://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="http://www.tutorialspoint.com/hibernate/hibernate_or_mappings.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr>
<p>Let us try an example of using Hibernate to provide Java persistence in a standalone application. We will go through different steps involved in creating Java Application using Hibernate technology.</p>
<h2>Create POJO Classes:</h2>
<p>The first step in creating an application is to build the Java POJO class or classes, depending on the application that will be persisted to the database. Let us consider our <b>Employee</b> class with <b>getXXX</b> and <b>setXXX</b> methods to make it JavaBeans compliant class. </p>
<p>A POJO (Plain Old Java Object) is a Java object that doesn't extend or implement some specialized classes and interfaces respectively required by the EJB framework. All normal Java objects are POJO.</p>
<p>When you design a classs to be persisted by Hibernate, it's important to provide JavaBeans compliant code as well as one attribute which would work as index like <b>id</b> attribute in the Employee class.</p>
<pre class="prettyprint prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Employee</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> id</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> firstName</span><span class="pun">;</span><span class="pln"> 
   </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> lastName</span><span class="pun">;</span><span class="pln">   
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> salary</span><span class="pun">;</span><span class="pln">  

   </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Employee</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Employee</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> fname</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> lname</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> salary</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">firstName </span><span class="pun">=</span><span class="pln"> fname</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">lastName </span><span class="pun">=</span><span class="pln"> lname</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">salary </span><span class="pun">=</span><span class="pln"> salary</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getId</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> id</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setId</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> id </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">id </span><span class="pun">=</span><span class="pln"> id</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getFirstName</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> firstName</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setFirstName</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> first_name </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">firstName </span><span class="pun">=</span><span class="pln"> first_name</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getLastName</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> lastName</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setLastName</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> last_name </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">lastName </span><span class="pun">=</span><span class="pln"> last_name</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getSalary</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> salary</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setSalary</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> salary </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">salary </span><span class="pun">=</span><span class="pln"> salary</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
<h2>Create Database Tables:</h2>
<p>Second step would be creating tables in your database. There would be one table corresponding to each object you are willing to provide persistence. Consider above objects need to be stored and retrieved into the following RDBMS table:</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">create table EMPLOYEE </span><span class="pun">(</span><span class="pln">
   id INT NOT NULL auto_increment</span><span class="pun">,</span><span class="pln">
   first_name VARCHAR</span><span class="pun">(</span><span class="lit">20</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> NULL</span><span class="pun">,</span><span class="pln">
   last_name  VARCHAR</span><span class="pun">(</span><span class="lit">20</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> NULL</span><span class="pun">,</span><span class="pln">
   salary     INT  </span><span class="kwd">default</span><span class="pln"> NULL</span><span class="pun">,</span><span class="pln">
   PRIMARY KEY </span><span class="pun">(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">
</span><span class="pun">);</span></pre>
<h2>Create Mapping Configuration File:</h2>
<p>This step is to create a mapping file that instructs Hibernate how to map the defined class or classes to the database tables.</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"utf-8"</span><span class="pun">?&gt;</span><span class="pln">
</span><span class="dec">&lt;!DOCTYPE hibernate-mapping PUBLIC 
 "-//Hibernate/Hibernate Mapping DTD//EN"
 "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span><span class="pln"> 

</span><span class="tag">&lt;hibernate-mapping&gt;</span><span class="pln">
   </span><span class="tag">&lt;class</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Employee"</span><span class="pln"> </span><span class="atn">table</span><span class="pun">=</span><span class="atv">"EMPLOYEE"</span><span class="tag">&gt;</span><span class="pln">
      </span><span class="tag">&lt;meta</span><span class="pln"> </span><span class="atn">attribute</span><span class="pun">=</span><span class="atv">"class-description"</span><span class="tag">&gt;</span><span class="pln">
         This class contains the employee detail. 
      </span><span class="tag">&lt;/meta&gt;</span><span class="pln">
      </span><span class="tag">&lt;id</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"id"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"int"</span><span class="pln"> </span><span class="atn">column</span><span class="pun">=</span><span class="atv">"id"</span><span class="tag">&gt;</span><span class="pln">
         </span><span class="tag">&lt;generator</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"native"</span><span class="tag">/&gt;</span><span class="pln">
      </span><span class="tag">&lt;/id&gt;</span><span class="pln">
      </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"firstName"</span><span class="pln"> </span><span class="atn">column</span><span class="pun">=</span><span class="atv">"first_name"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="tag">/&gt;</span><span class="pln">
      </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"lastName"</span><span class="pln"> </span><span class="atn">column</span><span class="pun">=</span><span class="atv">"last_name"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="tag">/&gt;</span><span class="pln">
      </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"salary"</span><span class="pln"> </span><span class="atn">column</span><span class="pun">=</span><span class="atv">"salary"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"int"</span><span class="tag">/&gt;</span><span class="pln">
   </span><span class="tag">&lt;/class&gt;</span><span class="pln">
</span><span class="tag">&lt;/hibernate-mapping&gt;</span></pre>
<p>You should save the mapping document in a file with the format &lt;classname&gt;.hbm.xml. We saved our mapping document in the file Employee.hbm.xml. Let us see little detail about the mapping document:</p>
<ul class="list">
<li><p>The mapping document is an XML document having &lt;hibernate-mapping&gt; as the root element which contains all the &lt;class&gt; elements.</p></li>
<li><p>The <b>&lt;class&gt;</b> elements are used to define specific mappings from a Java classes to the database tables. The Java class name is specified using the <b>name</b> attribute of the class element and the database table name is specified using the <b>table</b> attribute.</p></li>
<li><p>The <b>&lt;meta&gt;</b> element is optional element and can be used to create the class description.</p></li>
<li><p>The <b>&lt;id&gt;</b> element maps the unique ID attribute in class to the primary key of the database table. The <b>name</b> attribute of the id element refers to the property in the class and the <b>column</b> attribute refers to the column in the database table. The <b>type</b> attribute holds the hibernate mapping type, this mapping types will convert from Java to SQL data type.</p></li>
<li><p>The <b>&lt;generator&gt;</b> element within the id element is used to automatically generate the primary key values. Set the <b>class</b> attribute of the generator element is set to <b>native</b> to let hibernate pick up either <b>identity, sequence</b> or <b>hilo</b> algorithm to create primary key depending upon the capabilities of the underlying database.</p></li>
<li><p>The <b>&lt;property&gt;</b> element is used to map a Java class property to a column in the database table. The <b>name</b> attribute of the element refers to the property in the class and the <b>column</b> attribute refers to the column in the database table. The <b>type</b> attribute holds the hibernate mapping type, this mapping types will convert from Java to SQL data type.</p></li>
</ul>
<p>There are other attributes and elements available which will be used in a mapping document and I would try to cover as many as possible while discussing other Hibernate related topics.</p>
<h2>Create Application Class:</h2>
<p>Finally, we will create our application class with the main() method to run the application. We will use this application to save few Employee's records and then we will apply CRUD operations on those records.</p>
<pre class="prettyprint prettyprinted" style=""><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">List</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Date</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Iterator</span><span class="pun">;</span><span class="pln"> 
 
</span><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">hibernate</span><span class="pun">.</span><span class="typ">HibernateException</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">hibernate</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">hibernate</span><span class="pun">.</span><span class="typ">Transaction</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">hibernate</span><span class="pun">.</span><span class="typ">SessionFactory</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">hibernate</span><span class="pun">.</span><span class="pln">cfg</span><span class="pun">.</span><span class="typ">Configuration</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ManageEmployee</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">SessionFactory</span><span class="pln"> factory</span><span class="pun">;</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
         factory </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Configuration</span><span class="pun">().</span><span class="pln">configure</span><span class="pun">().</span><span class="pln">buildSessionFactory</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> ex</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
         </span><span class="typ">System</span><span class="pun">.</span><span class="pln">err</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Failed to create sessionFactory object."</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> ex</span><span class="pun">);</span><span class="pln">
         </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ExceptionInInitializerError</span><span class="pun">(</span><span class="pln">ex</span><span class="pun">);</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
      </span><span class="typ">ManageEmployee</span><span class="pln"> ME </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ManageEmployee</span><span class="pun">();</span><span class="pln">

      </span><span class="com">/* Add few employee records in database */</span><span class="pln">
      </span><span class="typ">Integer</span><span class="pln"> empID1 </span><span class="pun">=</span><span class="pln"> ME</span><span class="pun">.</span><span class="pln">addEmployee</span><span class="pun">(</span><span class="str">"Zara"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Ali"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1000</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Integer</span><span class="pln"> empID2 </span><span class="pun">=</span><span class="pln"> ME</span><span class="pun">.</span><span class="pln">addEmployee</span><span class="pun">(</span><span class="str">"Daisy"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Das"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">5000</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Integer</span><span class="pln"> empID3 </span><span class="pun">=</span><span class="pln"> ME</span><span class="pun">.</span><span class="pln">addEmployee</span><span class="pun">(</span><span class="str">"John"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Paul"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">10000</span><span class="pun">);</span><span class="pln">

      </span><span class="com">/* List down all the employees */</span><span class="pln">
      ME</span><span class="pun">.</span><span class="pln">listEmployees</span><span class="pun">();</span><span class="pln">

      </span><span class="com">/* Update employee's records */</span><span class="pln">
      ME</span><span class="pun">.</span><span class="pln">updateEmployee</span><span class="pun">(</span><span class="pln">empID1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">5000</span><span class="pun">);</span><span class="pln">

      </span><span class="com">/* Delete an employee from the database */</span><span class="pln">
      ME</span><span class="pun">.</span><span class="pln">deleteEmployee</span><span class="pun">(</span><span class="pln">empID2</span><span class="pun">);</span><span class="pln">

      </span><span class="com">/* List down new list of the employees */</span><span class="pln">
      ME</span><span class="pun">.</span><span class="pln">listEmployees</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="com">/* Method to CREATE an employee in the database */</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Integer</span><span class="pln"> addEmployee</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> fname</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> lname</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> salary</span><span class="pun">){</span><span class="pln">
      </span><span class="typ">Session</span><span class="pln"> session </span><span class="pun">=</span><span class="pln"> factory</span><span class="pun">.</span><span class="pln">openSession</span><span class="pun">();</span><span class="pln">
      </span><span class="typ">Transaction</span><span class="pln"> tx </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
      </span><span class="typ">Integer</span><span class="pln"> employeeID </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
         tx </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">beginTransaction</span><span class="pun">();</span><span class="pln">
         </span><span class="typ">Employee</span><span class="pln"> employee </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Employee</span><span class="pun">(</span><span class="pln">fname</span><span class="pun">,</span><span class="pln"> lname</span><span class="pun">,</span><span class="pln"> salary</span><span class="pun">);</span><span class="pln">
         employeeID </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Integer</span><span class="pun">)</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">save</span><span class="pun">(</span><span class="pln">employee</span><span class="pun">);</span><span class="pln"> 
         tx</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">HibernateException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">tx</span><span class="pun">!=</span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> tx</span><span class="pun">.</span><span class="pln">rollback</span><span class="pun">();</span><span class="pln">
         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         session</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> employeeID</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="com">/* Method to  READ all the employees */</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> listEmployees</span><span class="pun">(</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      </span><span class="typ">Session</span><span class="pln"> session </span><span class="pun">=</span><span class="pln"> factory</span><span class="pun">.</span><span class="pln">openSession</span><span class="pun">();</span><span class="pln">
      </span><span class="typ">Transaction</span><span class="pln"> tx </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
         tx </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">beginTransaction</span><span class="pun">();</span><span class="pln">
         </span><span class="typ">List</span><span class="pln"> employees </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">createQuery</span><span class="pun">(</span><span class="str">"FROM Employee"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"> 
         </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Iterator</span><span class="pln"> iterator </span><span class="pun">=</span><span class="pln"> 
                           employees</span><span class="pun">.</span><span class="pln">iterator</span><span class="pun">();</span><span class="pln"> iterator</span><span class="pun">.</span><span class="pln">hasNext</span><span class="pun">();){</span><span class="pln">
            </span><span class="typ">Employee</span><span class="pln"> employee </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Employee</span><span class="pun">)</span><span class="pln"> iterator</span><span class="pun">.</span><span class="kwd">next</span><span class="pun">();</span><span class="pln"> 
            </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="kwd">print</span><span class="pun">(</span><span class="str">"First Name: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> employee</span><span class="pun">.</span><span class="pln">getFirstName</span><span class="pun">());</span><span class="pln"> 
            </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="kwd">print</span><span class="pun">(</span><span class="str">"  Last Name: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> employee</span><span class="pun">.</span><span class="pln">getLastName</span><span class="pun">());</span><span class="pln"> 
            </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"  Salary: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> employee</span><span class="pun">.</span><span class="pln">getSalary</span><span class="pun">());</span><span class="pln"> 
         </span><span class="pun">}</span><span class="pln">
         tx</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">HibernateException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">tx</span><span class="pun">!=</span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> tx</span><span class="pun">.</span><span class="pln">rollback</span><span class="pun">();</span><span class="pln">
         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         session</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="com">/* Method to UPDATE salary for an employee */</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> updateEmployee</span><span class="pun">(</span><span class="typ">Integer</span><span class="pln"> </span><span class="typ">EmployeeID</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> salary </span><span class="pun">){</span><span class="pln">
      </span><span class="typ">Session</span><span class="pln"> session </span><span class="pun">=</span><span class="pln"> factory</span><span class="pun">.</span><span class="pln">openSession</span><span class="pun">();</span><span class="pln">
      </span><span class="typ">Transaction</span><span class="pln"> tx </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
         tx </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">beginTransaction</span><span class="pun">();</span><span class="pln">
         </span><span class="typ">Employee</span><span class="pln"> employee </span><span class="pun">=</span><span class="pln"> 
                    </span><span class="pun">(</span><span class="typ">Employee</span><span class="pun">)</span><span class="pln">session</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">Employee</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">,</span><span class="pln"> </span><span class="typ">EmployeeID</span><span class="pun">);</span><span class="pln"> 
         employee</span><span class="pun">.</span><span class="pln">setSalary</span><span class="pun">(</span><span class="pln"> salary </span><span class="pun">);</span><span class="pln">
		 session</span><span class="pun">.</span><span class="pln">update</span><span class="pun">(</span><span class="pln">employee</span><span class="pun">);</span><span class="pln"> 
         tx</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">HibernateException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">tx</span><span class="pun">!=</span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> tx</span><span class="pun">.</span><span class="pln">rollback</span><span class="pun">();</span><span class="pln">
         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         session</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   </span><span class="com">/* Method to DELETE an employee from the records */</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> deleteEmployee</span><span class="pun">(</span><span class="typ">Integer</span><span class="pln"> </span><span class="typ">EmployeeID</span><span class="pun">){</span><span class="pln">
      </span><span class="typ">Session</span><span class="pln"> session </span><span class="pun">=</span><span class="pln"> factory</span><span class="pun">.</span><span class="pln">openSession</span><span class="pun">();</span><span class="pln">
      </span><span class="typ">Transaction</span><span class="pln"> tx </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
         tx </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">beginTransaction</span><span class="pun">();</span><span class="pln">
         </span><span class="typ">Employee</span><span class="pln"> employee </span><span class="pun">=</span><span class="pln"> 
                   </span><span class="pun">(</span><span class="typ">Employee</span><span class="pun">)</span><span class="pln">session</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">Employee</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">,</span><span class="pln"> </span><span class="typ">EmployeeID</span><span class="pun">);</span><span class="pln"> 
         session</span><span class="pun">.</span><span class="kwd">delete</span><span class="pun">(</span><span class="pln">employee</span><span class="pun">);</span><span class="pln"> 
         tx</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">HibernateException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">tx</span><span class="pun">!=</span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> tx</span><span class="pun">.</span><span class="pln">rollback</span><span class="pun">();</span><span class="pln">
         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
         session</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre>
<h2>Compilation and Execution:</h2>
<p>Here are the steps to compile and run the above mentioned application. Make sure you have set PATH and CLASSPATH appropriately before proceeding for the compilation and execution.</p>
<ul class="list">
<li><p>Create hibernate.cfg.xml configuration file as explained in configuration chapter.</p></li>
<li><p>Create Employee.hbm.xml mapping file as shown above.</p></li>
<li><p>Create Employee.java source file as shown above and compile it.</p></li>
<li><p>Create ManageEmployee.java source file as shown above and compile it.</p></li>
<li><p>Execute ManageEmployee binary to run the program.</p></li>
</ul>
<p>You would get following result, and records would be created in EMPLOYEE table.</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">$java </span><span class="typ">ManageEmployee</span><span class="pln">
</span><span class="pun">.......</span><span class="pln">VARIOUS LOG MESSAGES WILL DISPLAY HERE</span><span class="pun">........</span><span class="pln">

</span><span class="typ">First</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Zara</span><span class="pln">  </span><span class="typ">Last</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Ali</span><span class="pln">  </span><span class="typ">Salary</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1000</span><span class="pln">
</span><span class="typ">First</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Daisy</span><span class="pln">  </span><span class="typ">Last</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Das</span><span class="pln">  </span><span class="typ">Salary</span><span class="pun">:</span><span class="pln"> </span><span class="lit">5000</span><span class="pln">
</span><span class="typ">First</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">John</span><span class="pln">  </span><span class="typ">Last</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Paul</span><span class="pln">  </span><span class="typ">Salary</span><span class="pun">:</span><span class="pln"> </span><span class="lit">10000</span><span class="pln">
</span><span class="typ">First</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Zara</span><span class="pln">  </span><span class="typ">Last</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Ali</span><span class="pln">  </span><span class="typ">Salary</span><span class="pun">:</span><span class="pln"> </span><span class="lit">5000</span><span class="pln">
</span><span class="typ">First</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">John</span><span class="pln">  </span><span class="typ">Last</span><span class="pln"> </span><span class="typ">Name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Paul</span><span class="pln">  </span><span class="typ">Salary</span><span class="pun">:</span><span class="pln"> </span><span class="lit">10000</span></pre>
<p>If you check your EMPLOYEE table, it should have following records:</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">mysql</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">select</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> EMPLOYEE</span><span class="pun">;</span><span class="pln">
</span><span class="pun">+----+------------+-----------+--------+</span><span class="pln">
</span><span class="pun">|</span><span class="pln"> id </span><span class="pun">|</span><span class="pln"> first_name </span><span class="pun">|</span><span class="pln"> last_name </span><span class="pun">|</span><span class="pln"> salary </span><span class="pun">|</span><span class="pln">
</span><span class="pun">+----+------------+-----------+--------+</span><span class="pln">
</span><span class="pun">|</span><span class="pln"> </span><span class="lit">29</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">Zara</span><span class="pln">       </span><span class="pun">|</span><span class="pln"> </span><span class="typ">Ali</span><span class="pln">       </span><span class="pun">|</span><span class="pln">   </span><span class="lit">5000</span><span class="pln"> </span><span class="pun">|</span><span class="pln">
</span><span class="pun">|</span><span class="pln"> </span><span class="lit">31</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">John</span><span class="pln">       </span><span class="pun">|</span><span class="pln"> </span><span class="typ">Paul</span><span class="pln">      </span><span class="pun">|</span><span class="pln">  </span><span class="lit">10000</span><span class="pln"> </span><span class="pun">|</span><span class="pln">
</span><span class="pun">+----+------------+-----------+--------+</span><span class="pln">
</span><span class="lit">2</span><span class="pln"> rows </span><span class="kwd">in</span><span class="pln"> </span><span class="kwd">set</span><span class="pln"> </span><span class="pun">(</span><span class="lit">0.00</span><span class="pln"> sec

mysql</span><span class="pun">&gt;</span></pre>
<hr>
<div class="pre-btn">
<a href="http://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="http://www.tutorialspoint.com/cgi-bin/printpage.cgi" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="http://www.tutorialspoint.com/hibernate/pdf/hibernate_examples.pdf" alt="Hibernate Examples" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="http://www.tutorialspoint.com/hibernate/hibernate_or_mappings.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr>
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="./Hibernate Examples_files/show_ads.js"></script><ins style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><ins id="aswift_1_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook at300b" title="Facebook" href="http://www.tutorialspoint.com/#"><span class="at16nc at300bs at15nc at15t_facebook at16t_facebook"><span class="at_a11y">Share on facebook</span></span></a>
<a class="addthis_button_twitter at300b" title="Tweet" href="http://www.tutorialspoint.com/#"><span class="at16nc at300bs at15nc at15t_twitter at16t_twitter"><span class="at_a11y">Share on twitter</span></span></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script><a class="addthis_button_google_plusone at300b" g:plusone:count="false"><div style="text-indent: 0px; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 24px; height: 15px; background-position: initial initial; background-repeat: initial initial;" id="___plusone_0"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 24px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" tabindex="0" vspace="0" width="100%" id="I0_1368970954650" name="I0_1368970954650" src="./Hibernate Examples_files/fastbutton.htm" allowtransparency="true" data-gapiattached="true" title="+1"></iframe></div></a>
<a class="addthis_button_linkedin at300b" href="http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=ra-4f661ec623a400f0&source=tbx-300&lng=en-GB&s=linkedin&url=http%3A%2F%2Fwww.tutorialspoint.com%2Fhibernate%2Fhibernate_examples.htm&title=Hibernate%20Examples&ate=AT-ra-4f661ec623a400f0/-/-/5198d6c66c67f835/2&frommenu=1&uid=5198d6c663502c03&ct=1&pre=http%3A%2F%2Fwww.tutorialspoint.com%2Fhibernate%2Fhibernate_sessions.htm&tt=0&captcha_provider=nucaptcha" target="_blank" title="Linkedin"><span class="at16nc at300bs at15nc at15t_linkedin at16t_linkedin"><span class="at_a11y">Share on linkedin</span></span></a>
<a class="addthis_button_email at300b" target="_blank" title="Email" href="http://www.tutorialspoint.com/#"><span class="at16nc at300bs at15nc at15t_email at16t_email"><span class="at_a11y">Share on email</span></span></a>
<a class="addthis_button_compact at300m" href="http://www.tutorialspoint.com/#"><span class="at16nc at300bs at15nc at15t_compact at16t_compact"><span class="at_a11y">More Sharing Services</span></span></a>
<div class="atclear"></div></div>
<script type="text/javascript" src="./Hibernate Examples_files/addthis_widget.js"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript" src="./Hibernate Examples_files/show_ads.js"> 
</script><ins style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><ins id="aswift_2_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><iframe width="160" height="600" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><div class="SkipThisFixedPosition main-iframe-wrapper" id="main-iframe-wrapper" style="width: 100%; height: 35px; position: fixed; top: 0px; left: 0px; line-height: 0; z-index: 2147483646; display: block !important;" background="chrome-extension://fdkednngfjmpnljkolbapdednncafhen/screenShot.png"><iframe class="TOOLBAR_IFRAME" id="0.017046127002686262" frameborder="0" scrolling="no" extensionid="fdkednngfjmpnljkolbapdednncafhen" name="{&quot;profileName&quot;:&quot;default&quot;}" style="width: 100%; line-height: 0; position: absolute; left: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgba(0, 0, 0, 0.294118); height: 35px !important; margin: 0px !important; top: 0px !important; visibility: visible;" src="./Hibernate Examples_files/iframeHost.htm" ctid="CT3298566" fixedid="TOOLBAR_IFRAME-CT3298566"></iframe></div><div id="mainContainerSB_CTID" style="width: 100%; display: block !important;"><div id="popupsFixedDiv" class="popupsFixedDivClass SkipThisFixedPosition" style="left:0px; height:0px; top:0px; z-index:2147483646; position:fixed; overflow:visible;"></div></div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="http://www.tutorialspoint.com/asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="http://www.tutorialspoint.com/jquery/index.htm" target="_top">jQuery </a> |
<a href="http://www.tutorialspoint.com/ajax/index.htm" target="_top">AJAX </a> |
<a href="http://www.tutorialspoint.com/ant/index.htm" target="_top">ANT</a> |
<a href="http://www.tutorialspoint.com/jsp/index.htm" target="_top">JSP </a> |
<a href="http://www.tutorialspoint.com/servlets/index.htm" target="_top">Servlets </a> |
<a href="http://www.tutorialspoint.com/log4j/index.htm" target="_top">log4j </a> |
<a href="http://www.tutorialspoint.com/ibatis/index.htm" target="_top">iBATIS </a> |
<a href="http://www.tutorialspoint.com/hibernate/index.htm" target="_top">Hibernate </a> |
<a href="http://www.tutorialspoint.com/jdbc/index.htm" target="_top">JDBC </a> |
<a href="http://www.tutorialspoint.com/struts_2/index.htm" target="_top">Struts </a> |
<a href="http://www.tutorialspoint.com/html5/index.htm" target="_top">HTML5 </a> |
<a href="http://www.tutorialspoint.com/sql/index.htm" target="_top">SQL </a> |
<a href="http://www.tutorialspoint.com/mysql/index.htm" target="_top">MySQL </a> |
<a href="http://www.tutorialspoint.com/cplusplus/index.htm" target="_top">C++ </a> |
<a href="http://www.tutorialspoint.com/unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright © 2012 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>

</body></html>